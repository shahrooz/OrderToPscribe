
import java.awt.Color;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 * Added this to the file see if diff will pick it up...
This line is added.........
 */

/*
 * Calculator.java
 *
 * Created on Aug 3, 2011, 8:55:37 AM
 */
/**
 *
 * @author shahrooz
 */
public class OrderToPScribe extends javax.swing.JFrame {
    private Object openButton;

    /** Creates new form Calculator */
    public OrderToPScribe() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
String mshTxnDtTm=defMSHTxnDtTm;
private static final String defMSHTxnDtTm="TxnDtTm<YYYYMMDD>";

String mrn=defMRN;
private static final String defMRN="<MRN>";

String lastNameFirstName=defLastNameFirstName;
private static final String defLastNameFirstName="<LastName,FirstName>";

String dob=defDOB;
private static final String defDOB="<DOB>";

String lang=defLang;
private static final String defLang="<Lang>";

String sex=defSex;
private static final String defSex="<Sex>";

String address="";
private static final String defAddress="<Address>";

String marStatus=defMarStatus;
private static final String defMarStatus="<MarStatus>";

String patStatus=defPatStatus;
private static final String defPatStatus="<PatStatus>";

String admDtTm=defAdmDtTm;
private static final String defAdmDtTm="AdmDtTm<YYYYMMDDHHMMSS>";

String disDtTm=defDisDtTm;
private static final String defDisDtTm="DisDtTm<YYYYMMDDHHMMSS>";

String orderControl=defOrderControl;
private static final String defOrderControl="SCCM";

String accession=defAccession;
private static final String defAccession="<RA11*******>";


String pacsId=defPacsId;
private static final String defPacsId="*PacsId*";

String examStartDtTm=defExamStartDtTm;
private static final String defExamStartDtTm="<examStartDtTm<YYYYMMDDHHMMSS>";

String examEndDtTm=defExamEndDtTm;
private static final String defExamEndDtTm="examEndDtTm<YYYYMMDDHHMMSS>";

String orderId=defOrderId;
private static final String defOrderId="*OrderId*";

String examName=defExamName;
private static final String defExamName="*examCode^ExamName*";

String modality=defModality;
private static final String defModality="XR";

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        plusButton = new javax.swing.JButton();
        minusButton = new javax.swing.JButton();
        mshTrxDtTmField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        mrnButton = new javax.swing.JTextField();
        LnFnField = new javax.swing.JTextField();
        dobField = new javax.swing.JTextField();
        sexField = new javax.swing.JComboBox();
        addressField = new javax.swing.JTextField();
        langField = new javax.swing.JComboBox();
        marStatusField = new javax.swing.JComboBox();
        jComboBox4 = new javax.swing.JComboBox();
        pidLabel = new javax.swing.JLabel();
        mshLabel = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        pv1Label = new javax.swing.JLabel();
        patientStatusField = new javax.swing.JComboBox();
        admDtTmField = new javax.swing.JTextField();
        disDtTmField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        orderControlField = new javax.swing.JComboBox();
        accessionField = new javax.swing.JTextField();
        pacsIdField = new javax.swing.JTextField();
        examStartDtTmField = new javax.swing.JTextField();
        examEndDtTmField = new javax.swing.JTextField();
        jSeparator4 = new javax.swing.JSeparator();
        orcLabel = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        orderIdField = new javax.swing.JTextField();
        examNameField = new javax.swing.JTextField();
        orderingProvField = new javax.swing.JTextField();
        reasonForExamField = new javax.swing.JTextField();
        modalityField = new javax.swing.JComboBox();
        obrLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        messageArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("OrderToPscribe");
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel1.setText("MSH");

        plusButton.setText("Save to File");
        plusButton.setToolTipText("Addition");
        plusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusButtonActionPerformed(evt);
            }
        });

        minusButton.setText("Populate Message");
        minusButton.setToolTipText("Subtraction");
        minusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusButtonActionPerformed(evt);
            }
        });

        mshTrxDtTmField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        mshTrxDtTmField.setText("TxnDtTm<YYYYMMDD>");
        mshTrxDtTmField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mshTrxDtTmFieldActionPerformed(evt);
            }
        });

        jLabel3.setText("PID");

        mrnButton.setText("MRN");
        mrnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mrnButtonActionPerformed(evt);
            }
        });

        LnFnField.setText("LastName^FirstName");
        LnFnField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LnFnFieldActionPerformed(evt);
            }
        });

        dobField.setText("DOB(2011MMDD)");
        dobField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dobFieldActionPerformed(evt);
            }
        });

        sexField.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "M", "F", "O" }));
        sexField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sexFieldActionPerformed(evt);
            }
        });

        addressField.setText("Address St^apt^City^State^Zip^Country");
        addressField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressFieldActionPerformed(evt);
            }
        });

        langField.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "EN", "SP", "HC", "AR" }));
        langField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                langFieldActionPerformed(evt);
            }
        });

        marStatusField.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "S", "M", " " }));
        marStatusField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                marStatusFieldActionPerformed(evt);
            }
        });

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "N", "Y" }));

        pidLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        pidLabel.setText("PID");

        mshLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        mshLabel.setText("MSH");

        pv1Label.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        pv1Label.setText("PV1");

        patientStatusField.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "I", "O", " " }));
        patientStatusField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientStatusFieldActionPerformed(evt);
            }
        });

        admDtTmField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        admDtTmField.setText("AdmDtTm<YYYYMMDDHHMMSS>");
        admDtTmField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                admDtTmFieldActionPerformed(evt);
            }
        });

        disDtTmField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        disDtTmField.setText("DisDtTm<YYYYMMDDHHMMSS>");
        disDtTmField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disDtTmFieldActionPerformed(evt);
            }
        });

        jLabel4.setText("PV1");

        jLabel5.setText("ORC");

        orderControlField.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SCCM", "CMCM", "CACA", "NW" }));
        orderControlField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderControlFieldActionPerformed(evt);
            }
        });

        accessionField.setText("RA11*******");
        accessionField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accessionFieldActionPerformed(evt);
            }
        });

        pacsIdField.setText("*PacsId*");
        pacsIdField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pacsIdFieldActionPerformed(evt);
            }
        });

        examStartDtTmField.setText("<examStartDtTm<YYYYMMDDHHMMSS>");
        examStartDtTmField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                examStartDtTmFieldActionPerformed(evt);
            }
        });

        examEndDtTmField.setText("examEndDtTm<YYYYMMDDHHMMSS>");
        examEndDtTmField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                examEndDtTmFieldActionPerformed(evt);
            }
        });

        orcLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        orcLabel.setText("ORC");

        jLabel6.setText("OBR");

        orderIdField.setText("*OrderID*");
        orderIdField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderIdFieldActionPerformed(evt);
            }
        });

        examNameField.setText("examCode^examName");
        examNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                examNameFieldActionPerformed(evt);
            }
        });

        orderingProvField.setText("epdsID^LastName^FirstName");

        reasonForExamField.setText("None");

        modalityField.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "CT", "FL", "MR", "NM", "SP", "US", "XR" }));
        modalityField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modalityFieldActionPerformed(evt);
            }
        });

        obrLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        obrLabel.setText("OBR");

        messageArea.setColumns(20);
        messageArea.setRows(5);
        jScrollPane1.setViewportView(messageArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(obrLabel)
                        .addContainerGap(2259, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(mshTrxDtTmField, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(2069, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(patientStatusField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(admDtTmField, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(disDtTmField, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(mshLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 906, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(1376, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pv1Label)
                        .addContainerGap(2261, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(orcLabel)
                        .addContainerGap(2259, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(orderControlField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(accessionField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pacsIdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(orderIdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(2200, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(minusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(plusButton)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1009, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(88, 88, 88)
                                .addComponent(examNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(examStartDtTmField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(examEndDtTmField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(orderingProvField, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(reasonForExamField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(modalityField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(1273, 1273, 1273))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(langField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(marStatusField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(mrnButton, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LnFnField, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dobField, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sexField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addressField, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(1302, 1302, 1302))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pidLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 1951, Short.MAX_VALUE)
                        .addGap(331, 331, 331))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.LEADING))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(mshTrxDtTmField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(mshLabel)
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(mrnButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(LnFnField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(dobField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(sexField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(addressField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(langField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(marStatusField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pidLabel)
                .addGap(11, 11, 11)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(38, 38, 38)
                        .addComponent(pv1Label))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(patientStatusField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(admDtTmField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(disDtTmField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(orderControlField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(accessionField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pacsIdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addComponent(orcLabel)
                .addGap(13, 13, 13)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(obrLabel))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(orderIdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(examStartDtTmField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(examEndDtTmField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(orderingProvField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(reasonForExamField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(modalityField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(examNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(46, 46, 46)
                .addComponent(minusButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(plusButton)
                .addGap(173, 173, 173))
        );

        mrnButton.getAccessibleContext().setAccessibleName("pidTwo");
        dobField.getAccessibleContext().setAccessibleName("YYYYMMDD-->20110226");
        dobField.getAccessibleContext().setAccessibleDescription("20110226");

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void plusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusButtonActionPerformed
int number1, number2 ;
try
{
    number1=Integer.parseInt(this.firstNum.getText());
}
 catch(Exception e)
 {
    JOptionPane.showMessageDialog(this, "Bad first number", "Error", JOptionPane.ERROR_MESSAGE);
    return;
 }
try
{
    number2=Integer.parseInt(this.secondNum.getText());
}
 catch(Exception e)
 {
    JOptionPane.showMessageDialog(this, "Bad 2nd number", "Error", JOptionPane.ERROR_MESSAGE);
    return;
 }
int answer=number1+number2;
this.answerLabel.setText("The answer is:"+answer);
}//GEN-LAST:event_plusButtonActionPerformed

private void minusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minusButtonActionPerformed

messageArea.setText(mshLabel.getText()+"\n");
messageArea.append(pidLabel.getText()+"\n");
messageArea.append(pv1Label.getText()+"\n");
messageArea.append(orcLabel.getText()+"\n");
messageArea.append(obrLabel.getText()+"\n");
}//GEN-LAST:event_minusButtonActionPerformed

private void mrnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mrnButtonActionPerformed
    try
    {
        Integer.parseInt(this.mrnButton.getText());
        mrn=mrnButton.getText();
        if (mrn.length()!=7)
        {
            JOptionPane.showMessageDialog(this, "MRN must be 7 charcter long..", "Error", JOptionPane.ERROR_MESSAGE);
            buildPID(false);
            return;
        }
    
    }catch(Exception e)
    {
        JOptionPane.showMessageDialog(this, "Bad MRN number", "Error", JOptionPane.ERROR_MESSAGE);
        buildPID(flase)
        return;
    }
    buildPID(true);

}//GEN-LAST:event_mrnButtonActionPerformed

private void mshTrxDtTmFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mshTrxDtTmFieldActionPerformed

mshTxnDtTm=mshTrxDtTmField.getText();
if (mshTxnDtTm.equals("t") || mshTxnDtTm.equals("T") ||mshTxnDtTm.equals(defMSHTxnDtTm))
{
    mshTxnDtTm=todayFormat("yyyyMMddhhmmss");
    mshTrxDtTmField.setForeground(Color.black);
    mshTrxDtTmField.setText(mshTxnDtTm);
    return;
}
if (mshTxnDtTm.length()!=14 )
{
        JOptionPane.showMessageDialog(this, "Incorrect MSH..", "Error", JOptionPane.ERROR_MESSAGE);
        buildMSH(false);
        return;
}
buildMSH(true);
}//GEN-LAST:event_mshTrxDtTmFieldActionPerformed

private void LnFnFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LnFnFieldActionPerformed
// TODO add your handling code here:
    lastNameFirstName=this.LnFnField.getText();
    if(lastNameFirstName.length()==0  )
    {
        buildPID(false);
        JOptionPane.showMessageDialog(this, "Incorrect LastName, Firstname..", "Error", JOptionPane.ERROR_MESSAGE);
        
    }
    buildPID(true);
}//GEN-LAST:event_LnFnFieldActionPerformed

private void dobFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dobFieldActionPerformed
    dob=this.dobField.getText();
    dob=this.dobField.getText();
    if (dob.equals("t") || dob.equals("T") ||dob.equals(defMSHTxnDtTm))
    {
        dob=todayFormat("yyyyMMdd");
        dobField.setForeground(Color.black);
        dobField.setText(dob);
        return;
    }

    if(dob.length()!=8  )
    {
        buildPID(false);
        JOptionPane.showMessageDialog(this, "Incorrect DOB synatx..i.e:YYYYMMDD(20110726)", "Error", JOptionPane.ERROR_MESSAGE);
        dob=todayFormat("yyyyMMdd");
        dobField.setForeground(Color.black);
        dobField.setText(dob);
        return;
    }
    buildPID(true);
}//GEN-LAST:event_dobFieldActionPerformed

private void sexFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sexFieldActionPerformed
    sex=(String)this.sexField.getSelectedItem() ;
    
    buildPID(true);

}//GEN-LAST:event_sexFieldActionPerformed



private void addressFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressFieldActionPerformed
    address=this.addressField.getText();
    if(dob.length()==0  )
    {
        buildPID(false);
        JOptionPane.showMessageDialog(this, "Address cannot be empty.. .", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
    buildPID(true);

}//GEN-LAST:event_addressFieldActionPerformed

private void langFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_langFieldActionPerformed
// TODO add your handling code here:
    lang=(String)this.langField.getSelectedItem() ; 
    buildPID(true);
}//GEN-LAST:event_langFieldActionPerformed

private void marStatusFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_marStatusFieldActionPerformed
// TODO add your handling code here:
    marStatus=(String)this.marStatusField.getSelectedItem() ; 
    buildPID(true);

}//GEN-LAST:event_marStatusFieldActionPerformed

private void admDtTmFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_admDtTmFieldActionPerformed
    admDtTm=admDtTmField.getText();
    if (admDtTm.equals("t") || admDtTm.equals("T") ||admDtTm.equals(defAdmDtTm))
    {
        admDtTm=todayFormat("yyyyMMddhhmmss");
        admDtTmField.setForeground(Color.black);
        admDtTmField.setText(admDtTm);
        return;
    }
    if (admDtTm.length()!=14 )
    {
        JOptionPane.showMessageDialog(this, "Incorrect Admit DtTm..", "Error", JOptionPane.ERROR_MESSAGE);
        buildPV1(false);
        return;
    }
    buildPV1(true);
}//GEN-LAST:event_admDtTmFieldActionPerformed

private void patientStatusFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientStatusFieldActionPerformed
    patStatus=(String)this.patientStatusField.getSelectedItem() ; 
    buildPV1(true);
}//GEN-LAST:event_patientStatusFieldActionPerformed

private void disDtTmFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disDtTmFieldActionPerformed
    disDtTm=disDtTmField.getText();
    if (disDtTm.equals("t") || disDtTm.equals("T") ||disDtTm.equals(defDisDtTm))
    {
        disDtTm=todayFormat("yyyyMMddhhmmss");
        disDtTmField.setForeground(Color.black);
        disDtTmField.setText(disDtTm);
        return;
    }
    if (disDtTm.length()!=14 )
    {
        JOptionPane.showMessageDialog(this, "Incorrect Discharge DtTm..", "Error", JOptionPane.ERROR_MESSAGE);
        buildPV1(false);
        return;
    }
    buildPV1(true);
}//GEN-LAST:event_disDtTmFieldActionPerformed

private void orderControlFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderControlFieldActionPerformed
//ORC1
orderControl=(String)this.orderControlField.getSelectedItem() ; 
    buildORC(true);    
}//GEN-LAST:event_orderControlFieldActionPerformed

private void accessionFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accessionFieldActionPerformed
// 
//        Integer.parseInt(this.accessionField.getText());
        accession=accessionField.getText();
        if (accession.length()!=11)
        {
            JOptionPane.showMessageDialog(this, "Accession must be 11 charcter long..", "Error", JOptionPane.ERROR_MESSAGE);
            buildORC(false);
            return;
        }
    
    buildORC(true);
    
}//GEN-LAST:event_accessionFieldActionPerformed

private void pacsIdFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pacsIdFieldActionPerformed
// 
  try
    {
        Integer.parseInt(this.pacsIdField.getText());
        pacsId=pacsIdField.getText();
        if (pacsId.length()!=8)
        {
            JOptionPane.showMessageDialog(this, "PacsID must be 8 digit..", "Error", JOptionPane.ERROR_MESSAGE);
            buildORC(false);
            return;
        }
    
    }catch(Exception e)
    {
        JOptionPane.showMessageDialog(this, "Bad PacsID number", "Error", JOptionPane.ERROR_MESSAGE);
        buildORC(false);
        return;
    }
    buildORC(true);
    
}//GEN-LAST:event_pacsIdFieldActionPerformed

private void examStartDtTmFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_examStartDtTmFieldActionPerformed
//
    examStartDtTm=examStartDtTmField.getText();
    if (examStartDtTm.equals("t") || examStartDtTm.equals("T") ||examStartDtTm.equals(defExamStartDtTm))
    {
        examStartDtTm=todayFormat("yyyyMMddhhmmss");
        examStartDtTmField.setForeground(Color.black);
        examStartDtTmField.setText(examStartDtTm);
        //return;
    }
    if (examStartDtTm.length()!=14 )
    {
        JOptionPane.showMessageDialog(this, "Incorrect Exam-Start DtTm..", "Error", JOptionPane.ERROR_MESSAGE);
        buildOBR(false);
        return;
    }
    buildOBR(true);
    
}//GEN-LAST:event_examStartDtTmFieldActionPerformed

private void orderIdFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderIdFieldActionPerformed
try
    {
        Integer.parseInt(this.orderIdField.getText());
        orderId=orderIdField.getText();
        if (orderId.length()!=9)
        {
            JOptionPane.showMessageDialog(this, "OrderID must be 9 digit..", "Error", JOptionPane.ERROR_MESSAGE);
            buildOBR(false);
            return;
        }
    
    }catch(Exception e)
    {
        JOptionPane.showMessageDialog(this, "Bad OrderID number", "Error", JOptionPane.ERROR_MESSAGE);
        buildOBR(false);
        return;
    }
    buildOBR(true);
    
}//GEN-LAST:event_orderIdFieldActionPerformed

private void examNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_examNameFieldActionPerformed
    examName=this.examNameField.getText();
    if(examName.length()==0 || !(examName.contains("^")) )
    {
        buildOBR(false);
        JOptionPane.showMessageDialog(this, "Incorrect ExamCode^ExamName..", "Error", JOptionPane.ERROR_MESSAGE);
        
    }
    buildOBR(true);
}//GEN-LAST:event_examNameFieldActionPerformed

private void modalityFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modalityFieldActionPerformed
    modality=(String)this.modalityField.getSelectedItem() ; 
    buildOBR(true);   
    
}//GEN-LAST:event_modalityFieldActionPerformed

private void examEndDtTmFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_examEndDtTmFieldActionPerformed
    examEndDtTm=examEndDtTmField.getText();
    if (examEndDtTm.equals("t") || examEndDtTm.equals("T") ||examEndDtTm.equals(defExamEndDtTm))
    {
        examEndDtTm=todayFormat("yyyyMMddhhmmss");
        examEndDtTmField.setForeground(Color.black);
        examEndDtTmField.setText(examEndDtTm);
        
    }
    if (examEndDtTm.length()!=14 )
    {
        JOptionPane.showMessageDialog(this, "Incorrect Exam-End Dt-Tm synatx..", "Error", JOptionPane.ERROR_MESSAGE);
        buildOBR(false);
        return;
    }
    buildOBR(true);
}//GEN-LAST:event_examEndDtTmFieldActionPerformed


private void buildMSH(Boolean value)
{
    if(value)
    {
        this.mshLabel.setText("MSH|^~\&|RADNET-HNAM|HNA|PSCRIBE||"+mshTxnDtTm+"||ORM^O01|Q1169446024T41418490|P|2.3");
    }
    else
        this.mshLabel.setText("MSH");
}
private void buildPID(Boolean value)
{
    if(value)
    {
        
        this.pidLabel.setText("PID|1|"+mrn+"^^^CHB_MRN|"+mrn+"^^^CHB_MRN^^E||"+lastNameFirstName+"||"+dob+"|"+sex+"||A|"+address+"|WIND|||"+lang+"|"+marStatus+"||||||||0|N");
    }
    else
        this.pidLabel.setText("PID");
}

private void buildPV1(Boolean value)
{
    if(value)
    {
        
        this.pv1Label.setText("PV1|1|"+patStatus+"|^^^CD:11712816|||||||||||||||CD||CD:3807741|||||||||||||||||||CD||D|||"+admDtTm+"|"+disDtTm);
    
    }
    else
        this.pv1Label.setText("PV1");
}


private void buildORC(Boolean value)
{
    if(value)
    {
        
        this.orcLabel.setText("ORC|"+orderControl+"|"+accession+"|"+pacsId);
    
    }
    else
        this.orcLabel.setText("ORC");
}

private void buildOBR(Boolean value)
{
    if(value)
    {
        
        this.obrLabel.setText("OBR|1|"+orderId+"|"+pacsId+"|"+examName+"|||"+examStartDtTm+"|"+examEndDtTm+"|||||||Rad Type&Rad Type|||||"+accession+"||||"+modality+"|||1^^0^^^R||||^None");
    
    }
    else
        this.obrLabel.setText("OBR");
}

public String todayFormat(String formatSyntax) {
        Date today = new Date();
        SimpleDateFormat formatter =   new SimpleDateFormat(formatSyntax);
        try {
            String dateString = formatter.format(today);
            //mshTrxDtTmField.setForeground(Color.black);
            //mshTrxDtTmField.setText(dateString);
            return (dateString);
        } catch (IllegalArgumentException iae) {
            //mshTrxDtTmField.setForeground(Color.red);
            //mshTrxDtTmField.setText("Error: " + iae.getMessage());
            return("Error: " + iae.getMessage());
        }
    }



    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OrderToPScribe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OrderToPScribe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OrderToPScribe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OrderToPScribe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new OrderToPScribe().setVisible(true);
                
            }
        });
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField LnFnField;
    private javax.swing.JTextField accessionField;
    private javax.swing.JTextField addressField;
    private javax.swing.JTextField admDtTmField;
    private javax.swing.JTextField disDtTmField;
    private javax.swing.JTextField dobField;
    private javax.swing.JTextField examEndDtTmField;
    private javax.swing.JTextField examNameField;
    private javax.swing.JTextField examStartDtTmField;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JComboBox langField;
    private javax.swing.JComboBox marStatusField;
    private javax.swing.JTextArea messageArea;
    private javax.swing.JButton minusButton;
    private javax.swing.JComboBox modalityField;
    private javax.swing.JTextField mrnButton;
    private javax.swing.JLabel mshLabel;
    private javax.swing.JTextField mshTrxDtTmField;
    private javax.swing.JLabel obrLabel;
    private javax.swing.JLabel orcLabel;
    private javax.swing.JComboBox orderControlField;
    private javax.swing.JTextField orderIdField;
    private javax.swing.JTextField orderingProvField;
    private javax.swing.JTextField pacsIdField;
    private javax.swing.JComboBox patientStatusField;
    private javax.swing.JLabel pidLabel;
    private javax.swing.JButton plusButton;
    private javax.swing.JLabel pv1Label;
    private javax.swing.JTextField reasonForExamField;
    private javax.swing.JComboBox sexField;
    // End of variables declaration//GEN-END:variables
}
